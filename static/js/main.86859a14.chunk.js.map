{"version":3,"sources":["components/QuestionPage/questionPage.jsx","components/InfoPage/infoPage.jsx","App.js","serviceWorker.js","index.js"],"names":["QuestionPage","react_default","a","createElement","className","this","props","string","onClick","handleYes","id","handleNo","Component","InfoPage","answer","info","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","target","setState","currentInfo","showComponent","currentQuestion","state","handleRestart","questions","quest","questionPage_QuestionPage","infoPage_InfoPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86859a14.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./questionPage.css\";\r\n\r\nexport default class QuestionPage extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"question\">\r\n\t\t\t\t\t<h1>{this.props.string}</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-lg\"\r\n\t\t\t\t\t\t\tonClick={this.props.handleYes}\r\n\t\t\t\t\t\t\tid={this.props.id}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-danger btn-lg\"\r\n\t\t\t\t\t\tonClick={this.props.handleNo}\r\n\t\t\t\t\t\tid={this.props.id}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNo\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport \"./infoPage.css\"\r\n\r\nexport default class InfoPage extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"info\">\r\n\t\t\t\t<h1>{this.props.answer}</h1>\r\n\t\t\t\t<div className=\"info1\">\r\n\t\t\t\t<div className=\"card text-white bg-info mb-3\">\r\n\t\t\t\t\t<h4>{this.props.info}</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\nimport QuestionPage from \"./components/QuestionPage/questionPage\";\nimport InfoPage from \"./components/InfoPage/infoPage\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showComponent: 1,\n      currentInfo: 0,\n      currentQuestion: 0,\n      questions: [\n        {\n          quest:\n            \"Are you suffering from a life threatening injury and/or in need immediate medical attention?\",\n          id: 0\n        },\n        { quest: \"Did you lose conscious or sustain a head injury?\", id: 1},\n        { quest: \"Are you having troubles breathing?\", id: 2 },\n        { quest: \"Do you have severe pain or sudden loss of feeling?\", id: 3 },\n        { quest: \"Did you sustain a minor non-life threatening injury?\", id: 4 },\n        { quest: \"Are you in need of stiches?\", id: 5 },\n        { quest: \"Are you experiencing persistent high fevers?\", id: 6 },\n        { quest: \"Do you have a family doctor?\", id: 7 }\n      ],\n      info: [\n        {\n          info:\n            \"The symptoms you outlined require immediate medical attention. If you are unable to physically go to your local Emergency Room please dial 911 and outline your symptoms. Hamilton Emergency Room wait times and information can be found here: https://www.hqontario.ca/System-Performance/Time-spent-in-emergency-departments \",\n          answer: \"YES you should go to the ER\"\n        },\n        {\n          info:\n            \"The symptoms you outlined require urgent care but are non-life threatening. Urgent care treats non-life threatening injuries and illnesses and offers eye care, labs, stitches, casts and x-rays (location may vary). Hamilton Urgent Care information can be found here: http://www.hamiltonhealthsciences.ca/body.cfm?ID=2109 Thank you! By choosing to go to URGENT CARE you are not contribute to the overcrowding of hospitals that affect the wait times for those with life threatening injuries/illnesses. \",\n          answer: \"NO you should go to URGENT CARE\"\n        },\n        {\n          info:\n            \"Your symptoms outlined do not require immediate medical attention. Walk in clinics provide medical care to patients who do not have a family doctor or are unable to reach them. You do not have to make an appointment to go to a walk in clinic. Hamilton Walk in Clinic information can be found here:  https://www.southwesternontario.ca/news-static/3905682-hamilton-area-walk-in-clinics/ Thank you! By choosing to go to a WALK IN CLINIC you are not contribute to the overcrowding of hospitals that affect the wait times for those with life threatening injuries/illnesses. \",\n          answer: \"NO you should go to a WALK IN CLINIC\"\n        },\n        {\n          info:\n            \"Your symptoms are non-life threatening and do not require immediate medical attention. Please make an appointment to see you family doctor. Hamilton Family Health Teams: https://www.hamiltonfht.ca/en/index.aspx Thank you! By choosing to go to your FAMILY DOCTOR you are not contribute to the overcrowding of hospitals that affect the wait times for those with life threatening injuries/illnesses.\",\n          answer: \"NO you should make an appointment with you FAMILY DOCTOR\"\n        }\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"topnav border-bottom\">\n          <h1>Should I Go To The Hospital?</h1>\n        </div>\n        <div className=\"mainPage\">\n          {this.state.showComponent ? (\n            <QuestionPage\n              string={this.state.questions[this.state.currentQuestion].quest}\n              handleYes={this.handleYes}\n              handleNo={this.handleNo}\n              id={this.state.questions[this.state.currentQuestion].id}\n            />\n          ) : (\n            <InfoPage\n              info={this.state.info[this.state.currentInfo].info}\n              answer={this.state.info[this.state.currentInfo].answer}\n            />\n          )}\n          <div className=\"restart\">\n            <button\n              className=\"btn btn-danger\"\n              onClick={this.handleRestart}\n            >\n              restart\n            </button>\n          </div>\n          <div className=\"emergency\">\n            <p>Always call 911 for medical Emergencies </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleYes = e => {\n    if (e.target.id == 0 || e.target.id == 1 || e.target.id == 2 || e.target.id == 3) {\n      this.setState({ currentInfo: 0, showComponent: 0 });\n    }\n    if (e.target.id == 4 || e.target.id == 5 || e.target.id == 6) {\n      this.setState({ currentInfo: 1, showComponent: 0 });\n    }\n    if (e.target.id == 4 || e.target.id == 5 || e.target.id == 6) {\n      this.setState({ currentInfo: 2, showComponent: 0 });\n    }\n    if (e.target.id == 7) {\n      this.setState({ currentInfo: 3, showComponent: 0 });\n    }\n  };\n\n  handleNo = e => {\n    if (e.target.id < 7) {\n      this.setState({ currentQuestion: this.state.currentQuestion + 1 });\n    }\n    else {\n      this.setState({ currentInfo: 2, showComponent: 0 });\n    }\n  };\n\n  handleRestart = () => {\n    this.setState({ currentQuestion: 0, showComponent: 1});\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}